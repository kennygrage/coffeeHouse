<?php

function ping_pong_menu() {
    $items = array();
    $items['ping_pong'] = array(
            'title' => 'Ping Pong Problem',
            'page callback' => 'drupal_get_form',
            'page arguments' => array('ping_pong_form'),
            'access callback' => TRUE,
            'type' => MENU_NORMAL_ITEM,
        );
    $items['ping_pong_success_page'] = array(
            'title' => 'Success',
            'page callback' => 'ping_pong_success',
            'access callback' => TRUE,
            'type' => MENU_CALLBACK,
        );
    $items['ping_pong_fail_page'] = array(
            'title' => 'Try Again',
            'page callback' => 'drupal_get_form',
            'page arguments' => array('ping_pong_fail'),
            'access callback' => TRUE,
            'type' => MENU_CALLBACK,
        );
    return $items;
} //end ping_pong_menu()


function ping_pong_form() {
    $form['count_goal'] = array(
            '#title' => 'Count Goal',
            '#type' => 'textfield',
            '#description' => t('Please enter the number you want to count up to.'),
            '#required' => TRUE,
            '#element_validate' => array('element_validate_integer_positive'),
    #element_validate_integer:          Validate integer elements
    #element_validate_integer_positive: Validate integer elements that must be positive
    #element_validate_number:           Validate numerical elements
    #date_validate:                     Validates the date input field type to prevent invalid dates (i.e. February 30, 2006)
    #password_confirm_validate:         Validates a password_confirm element
        );
    $form['count_down'] = array(
            '#title' => 'Count Down (Check if you want to count down instead of count up)',
            '#type' => 'checkbox',
        );

    $form['submit'] = array(
            '#type' => 'submit',
            '#value' =>  'Go',
        );

    return $form;
} //end ping_pong_form()


function ping_pong_success() {
    $output = '<ul>';
    foreach ($_SESSION['ping_pong_output'] as $value) {
        $output .= '<li>' . $value . '</li>';
    }

    $output .= '</ul>';

    return $output;
} //end ping_pong_success()


function ping_pong_fail() {
    drupal_set_message('Please enter an integer greater than or equal to 1');
    $form['count_goal'] = array(
            '#title' => 'Count Goal',
            '#type' => 'textfield',
            '#description' => t('Please enter the number you want to count up to.'),
        );
    $form['count_down'] = array(
            '#title' => 'Count Down (Check if you want to count down instead of count up)',
            '#type' => 'checkbox',
        );

    $form['submit'] = array(
            '#type' => 'submit',
            '#value' =>  'Go',
        );

    return $form;
} //end ping_pong_fail


function ping_pong_form_submit($form, &$form_state) {
    $count_max = $form_state['values']['count_goal'];
    $check_box = $form_state['values']['count_down'];
    $count_max = intval($count_max);
    if ($count_max >= 1) {
        $pingpong_output = page_submit_output($count_max, $check_box);
        $_SESSION['ping_pong_output'] = $pingpong_output;
        $form_state['redirect'] = 'ping_pong_success_page';
    }
    else { //User didn't enter a number greater than or equal to 1
        $form_state['redirect'] = 'ping_pong_fail_page';
    }

} //end ping_pong_form_submit()


function ping_pong_fail_submit($form, &$form_state) {
    $count_max = $form_state['values']['count_goal'];
    $check_box = $form_state['values']['count_down'];
    $count_max = intval($count_max);
    if ($count_max >= 1) {
        $pingpong_output = page_submit_output($count_max, $check_box);
        $_SESSION['ping_pong_output'] = $pingpong_output;
        $form_state['redirect'] = 'ping_pong_success_page';
    }
    else { //User didn't enter a number greater than or equal to 1
        $form_state['redirect'] = 'ping_pong_fail_page';
    }
} //end ping_pong_fail_submit()


function page_submit_output($count_max, $check_box) {
    $pingpong_output = array();

    if ($check_box) { //Count Down
        for ($i = $count_max; $i >= 1; $i--) {
            if ($i % 3 == 0 && $i % 5 == 0) {
                array_push($pingpong_output, "ping-pong");
            }
            elseif ($i % 3 == 0) {
                array_push($pingpong_output, "ping");
            }
            elseif ($i % 5 == 0) {
                array_push($pingpong_output, "pong");
            }
            else {
                array_push($pingpong_output, $i);
            }
        }
    }
    else { //Count Up
        for ($i = 1; $i <= $count_max; $i++) {
            if ($i % 3 == 0 && $i % 5 == 0) {
                array_push($pingpong_output, "ping-pong");
            }
            elseif ($i % 3 == 0) {
                array_push($pingpong_output, "ping");
            }
            elseif ($i % 5 == 0) {
                array_push($pingpong_output, "pong");
            }
            else {
                array_push($pingpong_output, $i);
            }
        }
    }
    return $pingpong_output;
} //end page_submit_output()
